Gautam is a programmer, he will post a programming question on daily basis. The question for the day is, he will be given two natural number n and m.
The task is to find the number of ways in which the numbers that are greater than or equal to m can be added to get the sum n.
For Ex:
Input : n = 3, m = 1
Output : 3
Following are three different ways
to get sum n such that each term is
greater than or equal to m
1 + 1 + 1, 1 + 2, 3 
--------------------------------------
#include <bits/stdc++.h> 
#define MAX 100 
using namespace std; 

int numberofways(int n, int m) 
{ 
	int dp[n+2][n+2]; 
	memset(dp, 0, sizeof(dp)); 

	dp[0][n + 1] = 1; 

	for (int k = n; k >= m; k--) { 

		// i is for sum 
		for (int i = 0; i <= n; i++) { 

			dp[i][k] = dp[i][k + 1]; 

			// if i > k 
			if (i - k >= 0) 
				dp[i][k] = (dp[i][k] + dp[i - k][k]); 
		} 
	} 

	return dp[n][m]; 
} 

int main() 
{ 
	int n,m;
	cin>>n;
	cin>>m;
	cout << numberofways(n, m) << endl; 
	return 0; 
} 
