Harish has to form a special triangle(Fibonacci triangle). Each number is the sum of two numbers above in either the left diagonal or the right diagonal. The first few rows are:
1
1 1
2 1 2
3 2 2 3
5 3 4 3 5
8 5 6 6 5 8
13 8 10 9 10 8 13
21 13 16 15 15 16 13 21
34 21 26 24 25 24 26 21 34
========================================================================================================
#include<bits/stdc++.h>
#define N 100
using namespace std; 

void printHosoya(int n) 
{ 
	int dp[N][N]; 
	memset(dp, 0, sizeof(dp)); 

	dp[0][0] = dp[1][0] = dp[1][1] = 1;  
	for (int i = 2; i < n; i++) { 
		for (int j = 0; j < n; j++) { 
 
			if (i > j) 
				dp[i][j] = dp[i - 1][j] + dp[i - 2][j]; 

			else
				dp[i][j] = dp[i - 1][j - 1] + dp[i - 2][j - 2]; 
		} 
	} 

	for (int i = 0; i < n; i++) { 
		for (int j = 0; j <= i; j++) 
			cout << dp[i][j] << " ";		 

		cout << endl; 
	} 
} 

//main function
int main() 
{ 
	int h;
	cin>>h;
	printHosoya(h); 
	return 0; 
} 
