Ragu given a mobile numeric keypad. You can only press buttons that are up, left, right or down to the current button. 
You are not allowed to press bottom row corner buttons (i.e. * and # ). Ragu will give a number N, you have to find out the number of possible numbers of given length.
For Ex:
For N=1, number of possible numbers would be 10 (0, 1, 2, 3, â€¦., 9)
For N=2, number of possible numbers would be 36
Possible numbers: 00,08 11,12,14 22,21,23,25 and so on.
If we start with 0, valid numbers will be 00, 08 (count: 2)
If we start with 1, valid numbers will be 11, 12, 14 (count: 3)
If we start with 2, valid numbers will be 22, 21, 23,25 (count: 4)
If we start with 3, valid numbers will be 33, 32, 36 (count: 3)
========================================================================================================
#include <stdio.h> 
int row[] = {0, 0, -1, 0, 1}; 
int col[] = {0, -1, 0, 1, 0}; 

int getCountUtil(char keypad[][3], int i, int j, int n) 
{ 
	if (keypad == NULL || n <= 0) 
		return 0; 

	if (n == 1) 
		return 1; 

	int k=0, move=0, ro=0, co=0, totalCount = 0; 

	for (move=0; move<5; move++) 
	{ 
		ro = i + row[move]; 
		co = j + col[move]; 
		if (ro >= 0 && ro <= 3 && co >=0 && co <= 2 && keypad[ro][co] != '*' && keypad[ro][co] != '#') 
		{ 
			totalCount += getCountUtil(keypad, ro, co, n-1); 
		} 
	} 

	return totalCount; 
} 

// returning the count of all possible numbers of length n in a given numeric keyboard 
int getCount(char keypad[][3], int n) 
{ 
	// Base cases 
	if (keypad == NULL || n <= 0) 
		return 0; 
	if (n == 1) 
		return 10; 

	int i=0, j=0, totalCount = 0; 
	for (i=0; i<4; i++) //traversing keypad row 
	{ 
		for (j=0; j<3; j++) // traversing keypad column 
		{ 
			// for 0 to 9 digits 
			if (keypad[i][j] != '*' && keypad[i][j] != '#') 
			{ 
			 
				totalCount += getCountUtil(keypad, i, j, n); 
			} 
		} 
	} 
	return totalCount; 
} 

//main function
int main(int argc, char *argv[]) 
{ 
char keypad[4][3] = {{'1','2','3'}, 
						{'4','5','6'}, 
						{'7','8','9'}, 
						{'*','0','#'}}; 
int n;
scanf("%d",&n);
printf("%d",getCount(keypad, n)); 

return 0; 
} 
