Consider a square grid with N rows and N columns. Each cell contains one integer.
Let ri denote the minimum value in the i-th row, and let Ci denote the maximum value in the i-th column. 
A grid is called nice if and only if the following condition holds true:
max(r1, r2, ..., rN) = min(C1, C2, ..., CN)
Write user defined functions “max” and “min” to find the maximum and minimum elements of the given array respectively.
---------------------------------------------------------------------------------------------------------
#include<stdio.h>
int row(int a[],int n)
{
    int max=a[0],i;
    for(i=0;i<n;i++)
    {
        if(a[i]>max)
            max=a[i];
    }
    return max;
}
int col(int b[],int n)
{
    int min=b[0],i;
    for(i=0;i<n;i++)
    {
        if(b[i]<min)
            min=b[i];
    }
    return min;
}
int main()
{
    int n;
    scanf("%d",&n);
    int arr[n][n],i,j,a[n],b[n],ma,mb;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            scanf("%d",&arr[i][j]);
        }
    }
    for(int i=0;i<n;i++)
    {
        int min=arr[i][0];
        for(int j=1;j<n;j++)
        {
            if(arr[i][j]<min)
            {
                min=arr[i][j];
            }
            a[i]=min;
        }
    }
    for(int i=0;i<n;i++)
    {
        int max=arr[0][i];
        for(int j=1;j<n;j++)
        {
            if(arr[j][i]>max)
                max=arr[j][i];
        }
        b[i]=max;
    }
    ma=row(a,n);
    mb=col(b,n);
    if(ma==mb)
        printf("The %d square grid is nice",n);
    else
        printf("The %d square grid is not nice",n);
    return 0;
}
